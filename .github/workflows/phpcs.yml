name: PHP phpcs

on:
   - push
#  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: |
       composer update 
       composer validate --no-check-all

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer update --prefer-dist --no-progress --no-suggest
      
    - name: Install phpcs
      run: curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
    - name: Install phpcbf
      run: curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar
      
    - name: Then test the downloaded phpcs.phar
      run: |
            php phpcs.phar -h
            ./vendor/bin/phpcs -i
    - name: Then test the downloaded phpcbf.phar
      run:  php phpcbf.phar -h


    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

#    - name: Run test suite
#      run: composer run-script test
    - name: ignore errors& warnings
      run: |
        ./vendor/bin/phpcs --config-set ignore_errors_on_exit 1
        ./vendor/bin/phpcs --config-set ignore_warnings_on_exit 1
        
#    - name: Run lint
 #     run: composer lint
      
    - name: Run phpcs
      run: ./vendor/bin/phpcs --standard=PSR12 docroot/themes/contrib/bootstrap_barrio/theme-settings.php
      
    - name: Run phpcbf
      run: ./vendor/bin/phpcbf -w --standard=PSR12 docroot/themes --error-severity=0

 
